<!DOCTYPE html>
<html lang="cs">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rozšířená interaktivní herní mapa</title>
    <style>
        body {
            margin: 0;
            padding: 10px;
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #2c3e50, #34495e);
            color: white;
            overflow-x: hidden;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .container {
            flex: 1;
            display: flex;
            flex-direction: column;
            max-width: 100vw;
            min-width: 800px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .header {
            text-align: center;
            margin-bottom: 15px;
            flex-shrink: 0;
        }

        .header h1 {
            font-size: clamp(1.5em, 4vw, 2.2em);
            margin: 10px 0;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
        }

        .instructions {
            text-align: center;
            margin-bottom: 10px;
            font-size: clamp(0.9em, 2vw, 1.1em);
            opacity: 0.9;
            flex-shrink: 0;
        }

        .legend {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-bottom: 15px;
            flex-wrap: wrap;
            flex-shrink: 0;
        }

        .legend-item {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 5px 10px;
            background: rgba(0,0,0,0.3);
            border-radius: 15px;
            font-size: 0.9em;
        }

        .legend-color {
            width: 16px;
            height: 16px;
            border-radius: 50%;
            border: 2px solid #fff;
        }

        .legend-color.own { background: #3498db; }
        .legend-color.abandoned { background: #ecf0f1; }
        .legend-color.neutral { background: #9b59b6; }
        .legend-color.ally { background: #27ae60; }
        .legend-color.enemy { background: #e74c3c; }

        .global-unit-indicator {
            text-align: center;
            margin-bottom: 15px;
            padding: 10px;
            background: rgba(0,0,0,0.7);
            border-radius: 10px;
            font-size: clamp(1em, 2.5vw, 1.3em);
            font-weight: bold;
            color: #f39c12;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0,0,0,0.3);
            flex-shrink: 0;
        }

        .global-unit-indicator.changing {
            transform: scale(1.05);
            background: rgba(231, 76, 60, 0.8);
        }

        .map-container {
            position: relative;
            background: linear-gradient(45deg, #34495e, #2c3e50);
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.3);
            width: 800px;
            height: 500px;
            margin: 0 auto;
            overflow: hidden;
            cursor: grab;
            border: 3px solid #3498db;
            flex: 0 0 auto;
        }

        .map-container.dragging {
            cursor: grabbing;
        }

        .map-content {
            position: relative;
            width: 3000px;
            height: 3000px;
            transition: transform 0.3s ease;
            background-image: 
                linear-gradient(to right, rgba(255,255,255,0.1) 1px, transparent 1px),
                linear-gradient(to bottom, rgba(255,255,255,0.1) 1px, transparent 1px);
            background-size: 100px 100px;
        }

        .context-menu {
            position: fixed;
            background: rgba(0,0,0,0.9);
            border-radius: 8px;
            padding: 10px;
            box-shadow: 0 5px 20px rgba(0,0,0,0.5);
            z-index: 1000;
            opacity: 0;
            transform: scale(0.9);
            transition: all 0.2s ease;
            pointer-events: none;
            backdrop-filter: blur(10px);
        }

        .context-menu.visible {
            opacity: 1;
            transform: scale(1);
            pointer-events: auto;
        }

        .context-menu-item {
            padding: 8px 15px;
            color: #ecf0f1;
            cursor: pointer;
            border-radius: 5px;
            transition: background-color 0.2s ease;
            font-size: 14px;
        }

        .context-menu-item:hover {
            background: rgba(52, 152, 219, 0.3);
        }

        .army-detail-window {
            position: absolute;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(0,0,0,0.95);
            border-radius: 15px;
            padding: 15px 20px;
            width: calc(100% - 80px);
            max-width: 700px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.7);
            z-index: 1001;
            opacity: 0;
            transform: translateX(-50%) translateY(20px);
            transition: all 0.3s ease;
            pointer-events: none;
            backdrop-filter: blur(15px);
            border: 2px solid #3498db;
        }

        .army-detail-window.visible {
            opacity: 1;
            transform: translateX(-50%) translateY(0);
            pointer-events: auto;
        }

        .army-detail-header {
            font-size: 1.3em;
            color: #3498db;
            margin-bottom: 15px;
            text-align: center;
            font-weight: bold;
            border-bottom: 1px solid #34495e;
            padding-bottom: 10px;
        }

        .army-detail-categories {
            display: flex;
            gap: 15px;
            justify-content: space-between;
        }

        .army-detail-category {
            flex: 1;
            padding: 12px;
            background: linear-gradient(135deg, #2c3e50, #34495e);
            border-radius: 8px;
            border-left: 3px solid #3498db;
            transition: all 0.2s ease;
            text-align: center;
        }

        .army-detail-category:hover {
            border-left-color: #f39c12;
            transform: translateY(-2px);
        }

        .army-detail-type {
            font-weight: bold;
            color: #f39c12;
            margin-bottom: 5px;
            font-size: 0.9em;
        }

        .army-detail-count {
            font-size: 1.4em;
            color: #ecf0f1;
            font-weight: bold;
        }

        .army-detail-description {
            font-size: 0.75em;
            color: #bdc3c7;
            font-style: italic;
            margin-top: 3px;
        }

        .province {
            position: absolute;
            border: 2px solid;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            text-align: center;
            font-weight: bold;
            font-size: 1.1em;
            width: 80px;
            height: 80px;
        }

        /* Vlastní državy (modré) */
        .province.own {
            border-color: #3498db;
            background: linear-gradient(135deg, #3498db, #2980b9);
            box-shadow: 0 4px 15px rgba(52, 152, 219, 0.3);
        }

        .province.own:hover {
            transform: scale(1.05);
            border-color: #5dade2;
            background: linear-gradient(135deg, #5dade2, #3498db);
            box-shadow: 0 6px 20px rgba(93, 173, 226, 0.4);
            animation: pulse 1.5s infinite;
        }

        .province.own.selected {
            border-color: #f1c40f;
            background: linear-gradient(135deg, #f1c40f, #f39c12);
            box-shadow: 0 8px 25px rgba(241, 196, 15, 0.5);
        }

        /* Opuštěné državy (bílé) */
        .province.abandoned {
            border-color: #bdc3c7;
            background: linear-gradient(135deg, #ecf0f1, #bdc3c7);
            color: #2c3e50;
            box-shadow: 0 4px 15px rgba(236, 240, 241, 0.3);
        }

        .province.abandoned:hover {
            transform: scale(1.02);
            border-color: #d5dbdb;
            background: linear-gradient(135deg, #f8f9fa, #ecf0f1);
            box-shadow: 0 6px 20px rgba(213, 219, 219, 0.4);
        }

        .province.abandoned.selected {
            border-color: #f1c40f;
            background: linear-gradient(135deg, #f1c40f, #f39c12);
            color: #2c3e50;
            box-shadow: 0 8px 25px rgba(241, 196, 15, 0.5);
        }

        /* Neutrální državy (fialové) */
        .province.neutral {
            border-color: #8e44ad;
            background: linear-gradient(135deg, #9b59b6, #8e44ad);
            box-shadow: 0 4px 15px rgba(155, 89, 182, 0.3);
        }

        .province.neutral:hover {
            transform: scale(1.02);
            border-color: #bb8fce;
            background: linear-gradient(135deg, #bb8fce, #9b59b6);
            box-shadow: 0 6px 20px rgba(187, 143, 206, 0.4);
        }

        .province.neutral.selected {
            border-color: #f1c40f;
            background: linear-gradient(135deg, #f1c40f, #f39c12);
            box-shadow: 0 8px 25px rgba(241, 196, 15, 0.5);
        }

        /* Spojenecké državy (zelené) */
        .province.ally {
            border-color: #27ae60;
            background: linear-gradient(135deg, #2ecc71, #27ae60);
            box-shadow: 0 4px 15px rgba(46, 204, 113, 0.3);
        }

        .province.ally:hover {
            transform: scale(1.02);
            border-color: #58d68d;
            background: linear-gradient(135deg, #58d68d, #2ecc71);
            box-shadow: 0 6px 20px rgba(88, 214, 141, 0.4);
        }

        .province.ally.selected {
            border-color: #f1c40f;
            background: linear-gradient(135deg, #f1c40f, #f39c12);
            box-shadow: 0 8px 25px rgba(241, 196, 15, 0.5);
        }

        /* Nepřátelské državy (červené) */
        .province.enemy {
            border-color: #c0392b;
            background: linear-gradient(135deg, #e74c3c, #c0392b);
            box-shadow: 0 4px 15px rgba(231, 76, 60, 0.3);
        }

        .province.enemy:hover {
            transform: scale(1.02);
            border-color: #ec7063;
            background: linear-gradient(135deg, #ec7063, #e74c3c);
            box-shadow: 0 6px 20px rgba(236, 112, 99, 0.4);
        }

        .province.enemy.selected {
            border-color: #f1c40f;
            background: linear-gradient(135deg, #f1c40f, #f39c12);
            box-shadow: 0 8px 25px rgba(241, 196, 15, 0.5);
        }

        .province-name {
            font-size: 0.85em;
            margin-bottom: 8px;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.5);
            line-height: 1.1;
        }

        .unit-count-display {
            font-size: 1.4em;
            font-weight: bold;
            color: #f39c12;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.8);
            margin-top: 5px;
            transition: all 0.3s ease;
        }

        .unit-type-indicator {
            font-size: 0.9em;
            color: #ecf0f1;
            margin-bottom: 5px;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.7);
        }

        .scroll-indicator {
            position: absolute;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 0.9em;
            color: #95a5a6;
            text-align: center;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .scroll-indicator.visible {
            opacity: 1;
        }

        @keyframes pulse {
            0% { box-shadow: 0 0 0 0 rgba(52, 152, 219, 0.7); }
            70% { box-shadow: 0 0 0 10px rgba(52, 152, 219, 0); }
            100% { box-shadow: 0 0 0 0 rgba(52, 152, 219, 0); }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>🗺️ Rozšířená interaktivní herní mapa</h1>
        </div>
        
        <div class="instructions">
            Scrolluj kolečkem nad mapou pro prohlížení vojenských jednotek vlastních držav | Tažením pohybuj po gridu 30x30 | Detail okno se zavře pouze při kliknutí na jinou državu
        </div>

        <div class="legend">
            <div class="legend-item">
                <div class="legend-color own"></div>
                <span>Vlastní državy</span>
            </div>
            <div class="legend-item">
                <div class="legend-color abandoned"></div>
                <span>Opuštěné državy</span>
            </div>
            <div class="legend-item">
                <div class="legend-color neutral"></div>
                <span>Neutrální državy</span>
            </div>
            <div class="legend-item">
                <div class="legend-color ally"></div>
                <span>Spojenecké državy</span>
            </div>
            <div class="legend-item">
                <div class="legend-color enemy"></div>
                <span>Nepřátelské državy</span>
            </div>
        </div>

        <div class="global-unit-indicator" id="globalUnitIndicator">
            🗡️ Zobrazuji: <span id="currentUnitType">OFF (Útočné jednotky)</span>
        </div>

        <div class="map-container">
            <div class="map-content" id="mapContent">
                <!-- Vlastní državy -->
                <div class="province own" data-name="Severní království" data-type="own">
                    <div class="province-name">Severní království</div>
                    <div class="unit-type-indicator" id="unitType-1">⚔️ OFF</div>
                    <div class="unit-count-display" id="unitCount-1">0</div>
                </div>
                <div class="province own" data-name="Východní údolí" data-type="own">
                    <div class="province-name">Východní údolí</div>
                    <div class="unit-type-indicator" id="unitType-2">⚔️ OFF</div>
                    <div class="unit-count-display" id="unitCount-2">0</div>
                </div>
                <div class="province own" data-name="Horské křídlo" data-type="own">
                    <div class="province-name">Horské křídlo</div>
                    <div class="unit-type-indicator" id="unitType-3">⚔️ OFF</div>
                    <div class="unit-count-display" id="unitCount-3">0</div>
                </div>
                <div class="province own" data-name="Pobřežní pevnost" data-type="own">
                    <div class="province-name">Pobřežní pevnost</div>
                    <div class="unit-type-indicator" id="unitType-4">⚔️ OFF</div>
                    <div class="unit-count-display" id="unitCount-4">0</div>
                </div>
                <div class="province own" data-name="Jižní pláně" data-type="own">
                    <div class="province-name">Jižní pláně</div>
                    <div class="unit-type-indicator" id="unitType-5">⚔️ OFF</div>
                    <div class="unit-count-display" id="unitCount-5">0</div>
                </div>
                <div class="province own" data-name="Centrální bašta" data-type="own">
                    <div class="province-name">Centrální bašta</div>
                    <div class="unit-type-indicator" id="unitType-6">⚔️ OFF</div>
                    <div class="unit-count-display" id="unitCount-6">0</div>
                </div>

                <!-- Opuštěné državy -->
                <div class="province abandoned" data-name="Opuštěná država" data-type="abandoned">
                    <div class="province-name">Opuštěná država</div>
                </div>
                <div class="province abandoned" data-name="Opuštěná država" data-type="abandoned">
                    <div class="province-name">Opuštěná država</div>
                </div>
                <div class="province abandoned" data-name="Opuštěná država" data-type="abandoned">
                    <div class="province-name">Opuštěná država</div>
                </div>
                <div class="province abandoned" data-name="Opuštěná država" data-type="abandoned">
                    <div class="province-name">Opuštěná država</div>
                </div>

                <!-- Neutrální državy -->
                <div class="province neutral" data-name="Svobodné město Kamenograd" data-type="neutral">
                    <div class="province-name">Svobodné město Kamenograd</div>
                </div>
                <div class="province neutral" data-name="Obchodní společenství Zlatý mostek" data-type="neutral">
                    <div class="province-name">Obchodní společenství Zlatý mostek</div>
                </div>
                <div class="province neutral" data-name="Neutrální zóna Stříbrné jezero" data-type="neutral">
                    <div class="province-name">Neutrální zóna Stříbrné jezero</div>
                </div>
                <div class="province neutral" data-name="Řemeslnický cech Železný důl" data-type="neutral">
                    <div class="province-name">Řemeslnický cech Železný důl</div>
                </div>
                <div class="province neutral" data-name="Volná republika Bílé vrcholy" data-type="neutral">
                    <div class="province-name">Volná republika Bílé vrcholy</div>
                </div>

                <!-- Spojenecké državy -->
                <div class="province ally" data-name="Spojené kingdom Zelený háj" data-type="ally">
                    <div class="province-name">Spojené kingdom Zelený háj</div>
                </div>
                <div class="province ally" data-name="Aliance Křišťálových jezer" data-type="ally">
                    <div class="province-name">Aliance Křišťálových jezer</div>
                </div>
                <div class="province ally" data-name="Bratrská unie Zlaté pláně" data-type="ally">
                    <div class="province-name">Bratrská unie Zlaté pláně</div>
                </div>
                <div class="province ally" data-name="Spojenecký bastión Smaragdové útesy" data-type="ally">
                    <div class="province-name">Spojenecký bastión Smaragdové útesy</div>
                </div>
                <div class="province ally" data-name="Přátelské království Jasná hvězda" data-type="ally">
                    <div class="province-name">Přátelské království Jasná hvězda</div>
                </div>

                <!-- Nepřátelské državy -->
                <div class="province enemy" data-name="Temné impérium Červené slunce" data-type="enemy">
                    <div class="province-name">Temné impérium Červené slunce</div>
                </div>
                <div class="province enemy" data-name="Válečná horda Černé kopí" data-type="enemy">
                    <div class="province-name">Válečná horda Černé kopí</div>
                </div>
                <div class="province enemy" data-name="Krvavá říše Železný pěst" data-type="enemy">
                    <div class="province-name">Krvavá říše Železný pěst</div>
                </div>
                <div class="province enemy" data-name="Barbarský klan Rudé vlky" data-type="enemy">
                    <div class="province-name">Barbarský klan Rudé vlky</div>
                </div>
                <div class="province enemy" data-name="Invazní síly Temný úsvit" data-type="enemy">
                    <div class="province-name">Invazní síly Temný úsvit</div>
                </div>
                <div class="province enemy" data-name="Nepřátelská citadela Krvavý meč" data-type="enemy">
                    <div class="province-name">Nepřátelská citadela Krvavý meč</div>
                </div>

                <div class="scroll-indicator" id="scrollIndicator">
                    🖱️ Scrolluj kolečkem kdekoliv nad gridem pro změnu zobrazených jednotek | Tažením pohybuj po mapě
                </div>
            </div>

            <div class="context-menu" id="contextMenu">
                <div class="context-menu-item" onclick="centerMap()">🎯 Vycentrovat mapu</div>
            </div>

            <div class="army-detail-window" id="armyDetailWindow">
                <div class="army-detail-header" id="armyDetailHeader">Detail armády</div>
                
                <!-- Obsah pro vlastní državy - vojenské jednotky -->
                <div class="army-detail-categories" id="armyDetailMilitary">
                    <div class="army-detail-category">
                        <div class="army-detail-type">⚔️ OFF</div>
                        <div class="army-detail-count" id="armyDetailOff">0</div>
                        <div class="army-detail-description">Útočné jednotky</div>
                    </div>
                    <div class="army-detail-category">
                        <div class="army-detail-type">🛡️ DEFF</div>
                        <div class="army-detail-count" id="armyDetailDeff">0</div>
                        <div class="army-detail-description">Obranné jednotky</div>
                    </div>
                    <div class="army-detail-category">
                        <div class="army-detail-type">🏰 SIEGE</div>
                        <div class="army-detail-count" id="armyDetailSiege">0</div>
                        <div class="army-detail-description">Obléhací jednotky</div>
                    </div>
                    <div class="army-detail-category">
                        <div class="army-detail-type">✨ SPEC</div>
                        <div class="army-detail-count" id="armyDetailSpec">0</div>
                        <div class="army-detail-description">Speciální jednotky</div>
                    </div>
                </div>
                
                <!-- Obsah pro cizí državy - informace o hráči a alianci -->
                <div class="army-detail-categories" id="armyDetailDiplomacy" style="display: none;">
                    <div class="army-detail-category" style="flex: 1;">
                        <div class="army-detail-type">👤 VLÁDCE</div>
                        <div class="army-detail-count" id="armyDetailPlayer" style="font-size: 1.1em;">-</div>
                        <div class="army-detail-description">Kdo vládne této držav</div>
                    </div>
                    <div class="army-detail-category" style="flex: 1;">
                        <div class="army-detail-type">🤝 ALIANCE</div>
                        <div class="army-detail-count" id="armyDetailAlliance" style="font-size: 1.1em;">-</div>
                        <div class="army-detail-description">Diplomatické spojenectví</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Herní data pouze pro vlastní državy
        const gameData = {
            'Severní království': {
                OFF: Math.floor(Math.random() * 500) + 100,
                DEFF: Math.floor(Math.random() * 400) + 150,
                SIEGE: Math.floor(Math.random() * 100) + 20,
                SPEC: Math.floor(Math.random() * 80) + 10
            },
            'Východní údolí': {
                OFF: Math.floor(Math.random() * 350) + 80,
                DEFF: Math.floor(Math.random() * 300) + 120,
                SIEGE: Math.floor(Math.random() * 80) + 15,
                SPEC: Math.floor(Math.random() * 60) + 8
            },
            'Horské křídlo': {
                OFF: Math.floor(Math.random() * 450) + 120,
                DEFF: Math.floor(Math.random() * 380) + 160,
                SIEGE: Math.floor(Math.random() * 70) + 12,
                SPEC: Math.floor(Math.random() * 90) + 15
            },
            'Pobřežní pevnost': {
                OFF: Math.floor(Math.random() * 400) + 90,
                DEFF: Math.floor(Math.random() * 450) + 180,
                SIEGE: Math.floor(Math.random() * 120) + 25,
                SPEC: Math.floor(Math.random() * 70) + 12
            },
            'Jižní pláně': {
                OFF: Math.floor(Math.random() * 600) + 150,
                DEFF: Math.floor(Math.random() * 350) + 100,
                SIEGE: Math.floor(Math.random() * 90) + 18,
                SPEC: Math.floor(Math.random() * 100) + 20
            },
            'Centrální bašta': {
                OFF: Math.floor(Math.random() * 550) + 140,
                DEFF: Math.floor(Math.random() * 500) + 200,
                SIEGE: Math.floor(Math.random() * 110) + 22,
                SPEC: Math.floor(Math.random() * 85) + 18
            }
        };

        // Data o hráčích a alicích pro cizí državy
        const playerData = {
            // Opuštěné državy
            'Opuštěná država': {
                player: 'Opuštěno',
                alliance: 'Žádná'
            },
            
            // Neutrální državy
            'Svobodné město Kamenograd': {
                player: 'Starosta Kamil Stonavský',
                alliance: 'Nezávislé obce'
            },
            'Obchodní společenství Zlatý mostek': {
                player: 'Zlatoslav Obchodník',
                alliance: 'Nezávislé obce'
            },
            'Neutrální zóna Stříbrné jezero': {
                player: 'Rada starších',
                alliance: 'Nezávislé obce'
            },
            'Řemeslnický cech Železný důl': {
                player: 'Mistr Kovář Želenda',
                alliance: 'Nezávislé obce'
            },
            'Volná republika Bílé vrcholy': {
                player: 'Prezident Vrcholný',
                alliance: 'Nezávislé obce'
            },
            
            // Spojenecké državy
            'Spojené kingdom Zelený háj': {
                player: 'Král Zeloslav Moudrý',
                alliance: 'Severní pakt'
            },
            'Aliance Křišťálových jezer': {
                player: 'Velkokněžna Křišťála',
                alliance: 'Severní pakt'
            },
            'Bratrská unie Zlaté pláně': {
                player: 'Bratr Zlatoslav',
                alliance: 'Severní pakt'
            },
            'Spojenecký bastión Smaragdové útesy': {
                player: 'Admirál Smaragd',
                alliance: 'Severní pakt'
            },
            'Přátelské království Jasná hvězda': {
                player: 'Královna Hvězdička',
                alliance: 'Severní pakt'
            },
            
            // Nepřátelské državy
            'Temné impérium Červené slunce': {
                player: 'Císař Temnotlav Krvavý',
                alliance: 'Osa zla'
            },
            'Válečná horda Černé kopí': {
                player: 'Náčelník Kopíslav Brutální',
                alliance: 'Osa zla'
            },
            'Krvavá říše Železný pěst': {
                player: 'Diktátor Železoslav Tyrančič',
                alliance: 'Osa zla'
            },
            'Barbarský klan Rudé vlky': {
                player: 'Vůdce smečky Vlčeslav',
                alliance: 'Osa zla'
            },
            'Invazní síly Temný úsvit': {
                player: 'Generál Úsvitoslav Temný',
                alliance: 'Osa zla'
            },
            'Nepřátelská citadela Krvavý meč': {
                player: 'Komandér Mečislav Bezlítostný',
                alliance: 'Osa zla'
            }
        };

        // Globální proměnné
        let currentUnitType = 0; // 0: OFF, 1: DEFF, 2: SIEGE, 3: SPEC
        let scrollTimeout = null;
        let lastScrollTime = 0;
        let selectedProvince = null; // Pro tracking vybrané državy
        const unitTypes = ['OFF', 'DEFF', 'SIEGE', 'SPEC'];
        const unitIcons = ['⚔️', '🛡️', '🏰', '✨'];
        const unitNames = ['OFF (Útočné jednotky)', 'DEFF (Obranné jednotky)', 'SIEGE (Obléhací jednotky)', 'SPEC (Speciální jednotky)'];
        const scrollDelay = 200;

        // Elementy
        const globalUnitIndicator = document.getElementById('globalUnitIndicator');
        const currentUnitTypeDisplay = document.getElementById('currentUnitType');
        const scrollIndicator = document.getElementById('scrollIndicator');
        const provinces = document.querySelectorAll('.province');
        const ownProvinces = document.querySelectorAll('.province.own');
        const mapContainer = document.querySelector('.map-container');
        const mapContent = document.getElementById('mapContent');
        const contextMenu = document.getElementById('contextMenu');
        const armyDetailWindow = document.getElementById('armyDetailWindow');

        // Web Audio API pro jednoduché zvukové efekty
        let audioContext = null;
        
        // Inicializace audio contextu po prvním kliknutí uživatele
        function initAudio() {
            if (!audioContext) {
                audioContext = new (window.AudioContext || window.webkitAudioContext)();
            }
        }

        // Funkce pro vytvoření jednoduchých zvuků pomocí Web Audio API
        function playSound(type) {
            initAudio();
            if (!audioContext) return;
            
            const oscillator = audioContext.createOscillator();
            const gainNode = audioContext.createGain();
            
            oscillator.connect(gainNode);
            gainNode.connect(audioContext.destination);
            
            // Různé frekvence a délky pro různé zvuky
            switch(type) {
                case 'hover':
                    oscillator.frequency.setValueAtTime(800, audioContext.currentTime);
                    gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);
                    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.1);
                    oscillator.start(audioContext.currentTime);
                    oscillator.stop(audioContext.currentTime + 0.1);
                    break;
                case 'click':
                    oscillator.frequency.setValueAtTime(600, audioContext.currentTime);
                    gainNode.gain.setValueAtTime(0.15, audioContext.currentTime);
                    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.2);
                    oscillator.start(audioContext.currentTime);
                    oscillator.stop(audioContext.currentTime + 0.2);
                    break;
                case 'military':
                    oscillator.frequency.setValueAtTime(400, audioContext.currentTime);
                    oscillator.frequency.setValueAtTime(500, audioContext.currentTime + 0.1);
                    gainNode.gain.setValueAtTime(0.2, audioContext.currentTime);
                    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.3);
                    oscillator.start(audioContext.currentTime);
                    oscillator.stop(audioContext.currentTime + 0.3);
                    break;
                case 'scroll':
                    oscillator.frequency.setValueAtTime(1000, audioContext.currentTime);
                    oscillator.frequency.exponentialRampToValueAtTime(1200, audioContext.currentTime + 0.05);
                    gainNode.gain.setValueAtTime(0.08, audioContext.currentTime);
                    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.05);
                    oscillator.start(audioContext.currentTime);
                    oscillator.stop(audioContext.currentTime + 0.05);
                    break;
            }
        }

        // Drag and drop proměnné
        let isDragging = false;
        let dragStartX = 0;
        let dragStartY = 0;
        let mapX = 0;
        let mapY = 0;
        let initialMapX = 0;
        let initialMapY = 0;
        let clickedProvince = null;
        let dragDistance = 0; // Pro měření vzdálenosti draggingu
        let wasDraggingInThisSession = false; // Pamatuje si, jestli došlo k draggingu v této mouse session

        // Grid nastavení
        const GRID_SIZE = 30;
        const CELL_SIZE = 100;
        const PROVINCE_SIZE = 80;

        // Funkce pro výpočet grid souřadnic a aktualizaci názvů
        function updateProvinceNamesWithCoordinates() {
            provinces.forEach(province => {
                const pixelX = parseInt(province.style.left);
                const pixelY = parseInt(province.style.top);
                
                // Výpočet grid souřadnic (od 1 do 30)
                const gridX = Math.round(pixelX / CELL_SIZE) + 1;
                const gridY = Math.round(pixelY / CELL_SIZE) + 1;
                
                // Získání původního názvu ze data-name
                const originalName = province.getAttribute('data-name');
                
                // Aktualizace zobrazeného názvu s souřadnicemi
                const nameElement = province.querySelector('.province-name');
                if (nameElement) {
                    nameElement.textContent = `${originalName} (${gridX}/${gridY})`;
                }
            });
        }

        // Funkce pro strategické rozmístění držav do skupin
        function strategicProvincePositions() {
            const usedPositions = new Set();
            
            // Definice oblastí pro jednotlivé typy držav
            const regions = {
                own: { xStart: 12, xEnd: 18, yStart: 12, yEnd: 18 }, // Střed - vlastní území
                ally: { xStart: 8, xEnd: 22, yStart: 8, yEnd: 22 }, // Kolem vlastního území
                neutral: { xStart: 5, xEnd: 25, yStart: 5, yEnd: 25 }, // Širší oblast
                enemy: { xStart: 0, xEnd: 30, yStart: 0, yEnd: 30 }, // Hranice a rohy
                abandoned: { xStart: 3, xEnd: 27, yStart: 3, yEnd: 27 } // Náhodně rozptýlené
            };

            // Funkce pro získání náhodné pozice v oblasti
            function getRandomPositionInRegion(region) {
                let gridX, gridY, position;
                let attempts = 0;
                
                do {
                    gridX = Math.floor(Math.random() * (region.xEnd - region.xStart)) + region.xStart;
                    gridY = Math.floor(Math.random() * (region.yEnd - region.yStart)) + region.yStart;
                    position = `${gridX},${gridY}`;
                    attempts++;
                } while (usedPositions.has(position) && attempts < 100);
                
                if (attempts >= 100) {
                    // Fallback - najdi jakoukoli volnou pozici
                    do {
                        gridX = Math.floor(Math.random() * GRID_SIZE);
                        gridY = Math.floor(Math.random() * GRID_SIZE);
                        position = `${gridX},${gridY}`;
                    } while (usedPositions.has(position));
                }
                
                return { gridX, gridY, position };
            }

            // Rozmístění vlastních držav (středové pozice)
            ownProvinces.forEach(province => {
                const { gridX, gridY, position } = getRandomPositionInRegion(regions.own);
                usedPositions.add(position);
                
                const pixelX = gridX * CELL_SIZE + (CELL_SIZE - PROVINCE_SIZE) / 2;
                const pixelY = gridY * CELL_SIZE + (CELL_SIZE - PROVINCE_SIZE) / 2;
                
                province.style.left = `${pixelX}px`;
                province.style.top = `${pixelY}px`;
            });

            // Rozmístění spojeneckých držav (kolem vlastních)
            const allyProvinces = document.querySelectorAll('.province.ally');
            allyProvinces.forEach(province => {
                const { gridX, gridY, position } = getRandomPositionInRegion(regions.ally);
                usedPositions.add(position);
                
                const pixelX = gridX * CELL_SIZE + (CELL_SIZE - PROVINCE_SIZE) / 2;
                const pixelY = gridY * CELL_SIZE + (CELL_SIZE - PROVINCE_SIZE) / 2;
                
                province.style.left = `${pixelX}px`;
                province.style.top = `${pixelY}px`;
            });

            // Rozmístění neutrálních držav
            const neutralProvinces = document.querySelectorAll('.province.neutral');
            neutralProvinces.forEach(province => {
                const { gridX, gridY, position } = getRandomPositionInRegion(regions.neutral);
                usedPositions.add(position);
                
                const pixelX = gridX * CELL_SIZE + (CELL_SIZE - PROVINCE_SIZE) / 2;
                const pixelY = gridY * CELL_SIZE + (CELL_SIZE - PROVINCE_SIZE) / 2;
                
                province.style.left = `${pixelX}px`;
                province.style.top = `${pixelY}px`;
            });

            // Rozmístění opuštěných držav
            const abandonedProvinces = document.querySelectorAll('.province.abandoned');
            abandonedProvinces.forEach(province => {
                const { gridX, gridY, position } = getRandomPositionInRegion(regions.abandoned);
                usedPositions.add(position);
                
                const pixelX = gridX * CELL_SIZE + (CELL_SIZE - PROVINCE_SIZE) / 2;
                const pixelY = gridY * CELL_SIZE + (CELL_SIZE - PROVINCE_SIZE) / 2;
                
                province.style.left = `${pixelX}px`;
                province.style.top = `${pixelY}px`;
            });

            // Rozmístění nepřátelských držav (preferovaně na hranicích)
            const enemyProvinces = document.querySelectorAll('.province.enemy');
            enemyProvinces.forEach(province => {
                let { gridX, gridY, position } = getRandomPositionInRegion(regions.enemy);
                
                // Preferuj pozice na hranicích gridu
                if (Math.random() < 0.7) {
                    const borderChoice = Math.floor(Math.random() * 4);
                    switch(borderChoice) {
                        case 0: // Horní hranice
                            gridY = Math.floor(Math.random() * 3);
                            break;
                        case 1: // Dolní hranice  
                            gridY = GRID_SIZE - 1 - Math.floor(Math.random() * 3);
                            break;
                        case 2: // Levá hranice
                            gridX = Math.floor(Math.random() * 3);
                            break;
                        case 3: // Pravá hranice
                            gridX = GRID_SIZE - 1 - Math.floor(Math.random() * 3);
                            break;
                    }
                    position = `${gridX},${gridY}`;
                    
                    // Pokud je pozice obsazená, použij původní náhodnou
                    if (usedPositions.has(position)) {
                        ({ gridX, gridY, position } = getRandomPositionInRegion(regions.enemy));
                    }
                }
                
                usedPositions.add(position);
                
                const pixelX = gridX * CELL_SIZE + (CELL_SIZE - PROVINCE_SIZE) / 2;
                const pixelY = gridY * CELL_SIZE + (CELL_SIZE - PROVINCE_SIZE) / 2;
                
                province.style.left = `${pixelX}px`;
                province.style.top = `${pixelY}px`;
            });
        }

        // Funkce pro zobrazení detailu armády nebo informací o držav
        function showArmyDetail(province) {
            // Pokud jsme během draggingu, ignoruj kliknutí
            if (isDragging) {
                return;
            }
            
            const provinceType = province.getAttribute('data-type');
            const provinceName = province.getAttribute('data-name');
            
            // Pokud klikám na stejnou državu, která je už vybraná, nedělej nic
            if (selectedProvince === province) {
                return;
            }
            
            // Získání souřadnic
            const pixelX = parseInt(province.style.left);
            const pixelY = parseInt(province.style.top);
            const gridX = Math.round(pixelX / CELL_SIZE) + 1;
            const gridY = Math.round(pixelY / CELL_SIZE) + 1;
            
            // Název s souřadnicemi
            const nameWithCoords = `${provinceName} (${gridX}/${gridY})`;
            
            // Odeber selected třídu z předchozí vybrané državy
            if (selectedProvince) {
                selectedProvince.classList.remove('selected');
            }
            
            // Nastav novou vybranou državu
            selectedProvince = province;
            province.classList.add('selected');
            
            // Zobraz detail pro vlastní nebo cizí državy
            if (provinceType === 'own') {
                // Vlastní državy - zobraz vojenské jednotky
                const data = gameData[provinceName];
                if (!data) return;
                
                document.getElementById('armyDetailHeader').textContent = nameWithCoords;
                document.getElementById('armyDetailOff').textContent = data.OFF;
                document.getElementById('armyDetailDeff').textContent = data.DEFF;
                document.getElementById('armyDetailSiege').textContent = data.SIEGE;
                document.getElementById('armyDetailSpec').textContent = data.SPEC;
                
                // Zobraz vojenské informace, skryj diplomatické
                document.getElementById('armyDetailMilitary').style.display = 'flex';
                document.getElementById('armyDetailDiplomacy').style.display = 'none';
            } else {
                // Cizí državy - zobraz informace o hráči a alianci
                const data = playerData[provinceName];
                if (!data) return;
                
                document.getElementById('armyDetailHeader').textContent = nameWithCoords;
                document.getElementById('armyDetailPlayer').textContent = data.player;
                document.getElementById('armyDetailAlliance').textContent = data.alliance;
                
                // Zobraz diplomatické informace, skryj vojenské
                document.getElementById('armyDetailMilitary').style.display = 'none';
                document.getElementById('armyDetailDiplomacy').style.display = 'flex';
            }
            
            armyDetailWindow.classList.add('visible');
        }
        
        function hideArmyDetail() {
            // Pokud jsme během draggingu, NIKDY nezavírej detail okno
            if (isDragging) {
                return;
            }
            
            // Odeber selected třídu z vybrané državy
            if (selectedProvince) {
                selectedProvince.classList.remove('selected');
                selectedProvince = null;
            }
            
            armyDetailWindow.classList.remove('visible');
        }

        function throttle(func, delay) {
            let timeoutId;
            let lastExecTime = 0;
            return function (...args) {
                const currentTime = Date.now();
                
                if (currentTime - lastExecTime > delay) {
                    func.apply(this, args);
                    lastExecTime = currentTime;
                } else {
                    clearTimeout(timeoutId);
                    timeoutId = setTimeout(() => {
                        func.apply(this, args);
                        lastExecTime = Date.now();
                    }, delay - (currentTime - lastExecTime));
                }
            };
        }

        // Funkce pro aktualizaci zobrazení pouze vlastních provincií
        function updateOwnProvinces(unitTypeIndex) {
            const unitType = unitTypes[unitTypeIndex];
            const unitIcon = unitIcons[unitTypeIndex];
            const unitName = unitNames[unitTypeIndex];
            
            currentUnitTypeDisplay.textContent = unitName;
            globalUnitIndicator.classList.add('changing');
            
            setTimeout(() => {
                globalUnitIndicator.classList.remove('changing');
            }, 300);

            // Aktualizace pouze vlastních provincií
            ownProvinces.forEach((province, index) => {
                const provinceName = province.getAttribute('data-name');
                const data = gameData[provinceName];
                
                if (data) {
                    const unitTypeElement = document.getElementById(`unitType-${index + 1}`);
                    const unitCountElement = document.getElementById(`unitCount-${index + 1}`);
                    
                    if (unitTypeElement && unitCountElement) {
                        unitTypeElement.textContent = `${unitIcon} ${unitType}`;
                        unitCountElement.textContent = data[unitType];
                        
                        // Animace změny
                        unitCountElement.style.transform = 'scale(1.2)';
                        unitCountElement.style.color = '#e74c3c';
                        
                        setTimeout(() => {
                            unitCountElement.style.transform = 'scale(1)';
                            unitCountElement.style.color = '#f39c12';
                        }, 200);
                    }
                }
            });
        }

        // Throttled scroll handler
        const throttledScroll = throttle((delta) => {
            const currentTime = Date.now();
            
            if (currentTime - lastScrollTime < scrollDelay) {
                return;
            }
            
            lastScrollTime = currentTime;
            
            if (delta > 0) {
                currentUnitType = (currentUnitType + 1) % unitTypes.length;
            } else {
                currentUnitType = (currentUnitType - 1 + unitTypes.length) % unitTypes.length;
            }
            
            updateOwnProvinces(currentUnitType);
        }, 100);

        // Event listener pro scrollování
        mapContainer.addEventListener('wheel', (e) => {
            e.preventDefault();
            const delta = e.deltaY;
            throttledScroll(delta);
            playSound('scroll');
        });

        // Hover efekty a klikání pro všechny provincie
        provinces.forEach(province => {
            const provinceType = province.getAttribute('data-type');
            
            // Hover zvuk pro wszystkie typy držav
            province.addEventListener('mouseenter', () => {
                if (!isDragging && !wasDraggingInThisSession) { // Jen pokud netahám mapu
                    playSound('hover');
                }
            });
            
            // Context menu pro všechny typy držav
            province.addEventListener('contextmenu', (e) => {
                if (!isDragging && !wasDraggingInThisSession) { // Jen pokud netahám mapu
                    e.preventDefault();
                    clickedProvince = province;
                    contextMenu.style.left = `${e.clientX}px`;
                    contextMenu.style.top = `${e.clientY}px`;
                    contextMenu.classList.add('visible');
                    playSound('click');
                }
            });
            
            // Detail při kliknutí pro všechny typy držav
            province.addEventListener('click', (e) => {
                if (!isDragging && !wasDraggingInThisSession) { // Jen pokud netahám mapu
                    e.stopPropagation();
                    showArmyDetail(province);
                    
                    // Různé zvuky podle typu državy
                    if (provinceType === 'own') {
                        playSound('military');
                    } else {
                        playSound('click');
                    }
                }
            });
        });

        // Drag and drop funkcionalita
        mapContainer.addEventListener('mousedown', (e) => {
            if (e.button === 0) {
                isDragging = true;
                wasDraggingInThisSession = false; // Reset na začátku nové mouse session
                dragDistance = 0; // Reset vzdálenosti
                dragStartX = e.clientX;
                dragStartY = e.clientY;
                initialMapX = mapX;
                initialMapY = mapY;
                mapContainer.classList.add('dragging');
                mapContent.style.transition = 'none';
                e.preventDefault();
            }
        });

        mapContainer.addEventListener('contextmenu', (e) => {
            e.preventDefault();
        });

        document.addEventListener('mousemove', (e) => {
            if (isDragging) {
                const deltaX = (e.clientX - dragStartX) * 2.0;
                const deltaY = (e.clientY - dragStartY) * 2.0;
                
                // Vypočítej celkovou vzdálenost pohybu
                dragDistance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);
                
                // Pokud se mapa posunula o více než 5px, označíme to jako skutečný dragging
                if (dragDistance > 5) {
                    wasDraggingInThisSession = true;
                }
                
                mapX = initialMapX + deltaX;
                mapY = initialMapY + deltaY;
                mapContent.style.transform = `translate(${mapX}px, ${mapY}px)`;
            }
        });

        document.addEventListener('mouseup', (e) => {
            if (isDragging) {
                isDragging = false;
                mapContainer.classList.remove('dragging');
                mapContent.style.transition = 'transform 0.3s ease';
                
                // Po krátké době resetuj wasDraggingInThisSession
                // (dáváme čas na to, aby se click eventy stihly vyhodnotit)
                setTimeout(() => {
                    wasDraggingInThisSession = false;
                }, 50);
            }
        });

        mapContainer.addEventListener('mouseleave', () => {
            if (isDragging) {
                isDragging = false;
                mapContainer.classList.remove('dragging');
                mapContent.style.transition = 'transform 0.3s ease';
                
                setTimeout(() => {
                    wasDraggingInThisSession = false;
                }, 50);
            }
        });

        document.addEventListener('click', (e) => {
            if (!contextMenu.contains(e.target)) {
                contextMenu.classList.remove('visible');
                clickedProvince = null;
            }
            
            if (!armyDetailWindow.contains(e.target) && !e.target.closest('.province')) {
                hideArmyDetail();
            }
        });

        // Funkce pro vycentrování mapy
        function centerMap() {
            playSound('click');
            
            if (clickedProvince) {
                const rect = clickedProvince.getBoundingClientRect();
                const containerRect = mapContainer.getBoundingClientRect();
                
                const provinceX = rect.left + rect.width / 2 - containerRect.left;
                const provinceY = rect.top + rect.height / 2 - containerRect.top;
                
                const containerCenterX = containerRect.width / 2;
                const containerCenterY = containerRect.height / 2;
                
                mapX = mapX + (containerCenterX - provinceX);
                mapY = mapY + (containerCenterY - provinceY);
                
                mapContent.style.transform = `translate(${mapX}px, ${mapY}px)`;
                clickedProvince = null;
            } else {
                const gridCenterX = (GRID_SIZE * CELL_SIZE) / 2;
                const gridCenterY = (GRID_SIZE * CELL_SIZE) / 2;
                const containerCenterX = mapContainer.offsetWidth / 2;
                const containerCenterY = mapContainer.offsetHeight / 2;
                
                mapX = containerCenterX - gridCenterX;
                mapY = containerCenterY - gridCenterY;
                mapContent.style.transform = `translate(${mapX}px, ${mapY}px)`;
            }
            contextMenu.classList.remove('visible');
        }

        // Inicializace
        document.addEventListener('DOMContentLoaded', () => {
            console.log('🎮 Rozšířená herní mapa načtena!');
            console.log('📊 Načteno', Object.keys(gameData).length, 'vlastních držav s vojenskými daty');
            console.log('🌍 Načteno', Object.keys(playerData).length, 'cizích držav s diplomatickými informacemi');
            console.log('🏛️ Celkem', provinces.length, 'držav všech typů');
            console.log('🌐 Grid systém:', GRID_SIZE + 'x' + GRID_SIZE, 'čtverečků');
            console.log('🔊 Zvukové efekty aktivní (hover, click, scroll, military)');
            
            // Strategické rozmístění držav
            strategicProvincePositions();
            
            // Aktualizace názvů s grid souřadnicemi
            updateProvinceNamesWithCoordinates();
            
            // Vycentrování na střed gridu
            centerMap();
            
            // Inicializace zobrazení vlastních provincií
            updateOwnProvinces(currentUnitType);
            
            // Zobrazení scroll indikátoru
            scrollIndicator.classList.add('visible');
            
            // Inicializace audio při prvním kliknutí
            document.addEventListener('click', initAudio, { once: true });
        });
    </script>
</body>
</html>